name: Daily tvm-spec cp0 sync

on:
  schedule:
    - cron: '17 3 * * *'
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch in ton-community/tvm-spec to fetch cp0.json from'
        required: false
        default: 'master'
        type: string

permissions:
  contents: write

jobs:
  fetch-and-release:
    runs-on: ubuntu-latest
    env:
      SOURCE_BRANCH: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.source_branch || 'master' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install markdown

      - name: Fetch and transform cp0.json
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          python - <<'PY'
          import json, os, urllib.request
          import markdown

          branch = os.environ.get('SOURCE_BRANCH', 'master')
          url = f"https://raw.githubusercontent.com/ton-community/tvm-spec/{branch}/cp0.json"

          with urllib.request.urlopen(url) as resp:
              data = json.load(resp)

          # Convert doc.description from Markdown to HTML if present
          for insn in data['instructions']:
              doc = insn['doc']
              doc['description'] = markdown.markdown(doc['description'], extensions=['extra', 'sane_lists'])
          for alias in data['aliases']:
              alias['description'] = markdown.markdown(alias['description'], extensions=['extra', 'sane_lists'])

          # Find latest commit touching cp0.json on the given branch
          token = os.environ.get('GITHUB_TOKEN')
          commits_api = f"https://api.github.com/repos/ton-community/tvm-spec/commits?path=cp0.json&sha={branch}&per_page=1"
          req = urllib.request.Request(commits_api, headers={
              'Accept': 'application/vnd.github+json',
              'User-Agent': 'cp0-sync-action'
          })
          if token:
              req.add_header('Authorization', f'Bearer {token}')
          with urllib.request.urlopen(req) as r:
              commits = json.load(r)
          source_sha = commits[0]['sha'] if commits else 'unknown'
          source_sha_short = source_sha[:7]

          out_path = 'cp0.json'
          with open(out_path, 'w', encoding='utf-8') as f:
              json.dump(data, f, ensure_ascii=False, separators=(',', ':'))
          # Write outputs
          gh_out = os.environ.get('GITHUB_OUTPUT')
          with open(gh_out, 'a', encoding='utf-8') as outf:
              outf.write(f"artifact={out_path}\n")
              outf.write(f"source_sha={source_sha}\n")
              outf.write(f"source_sha_short={source_sha_short}\n")
          PY

      - name: Commit changes if any
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -N cp0.json
          if git diff --quiet -- cp0.json; then
            echo "No changes in cp0.json. Skipping commit."
          else
            git add cp0.json
            git commit -m "chore: update cp0.json from ton-community/tvm-spec@${{ steps.build.outputs.source_sha_short }} (branch ${{ env.SOURCE_BRANCH }})"
            git push
          fi


